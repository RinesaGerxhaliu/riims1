// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RIIMS.Infrastructure.Data;

#nullable disable

namespace RIIMS.Infrastructure.Migrations
{
    [DbContext(typeof(RiimsDbContext))]
    [Migration("20241230124255_Seeding Data")]
    partial class SeedingData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "3dca8f33-ecf0-484f-a28b-ebd04e7247b6",
                            ConcurrencyStamp = "3dca8f33-ecf0-484f-a28b-ebd04e7247b6",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "745b9f24-a569-4f1c-bc34-5d9911b2d644",
                            ConcurrencyStamp = "745b9f24-a569-4f1c-bc34-5d9911b2d644",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Aftesite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstitucioniId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("InstitucioniId");

                    b.HasIndex("UserId");

                    b.ToTable("Aftesite");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Departamenti", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstitucioniId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstitucioniId");

                    b.ToTable("Departamenti");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a2c57ba-17fb-4f79-bcc4-cef9e704bf3d"),
                            Emri = "Menaxhment, Biznes dhe Ekonomi",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("1efbe13e-9b02-4860-8715-f80b035f93e2"),
                            Emri = "Shkenca Kompjuterike dhe Inxhineri",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("2c6b9320-7b40-4234-867c-03e3ae05f7ba"),
                            Emri = "Menaxhment i Mekatronikës",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("6d76ebfe-ef5b-43e5-8813-bbf98f2e7657"),
                            Emri = "Sistemet e Informacionit",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("dd90af7b-1852-42af-942d-c51fd8c6e854"),
                            Emri = "Arkitekturë dhe Planifikimi Hapësinor",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("f9944afc-5811-4960-96ab-d585f0210707"),
                            Emri = "Inxhineri Ndërtimore(Ndërtimtari) dhe Infrastrukturë",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("9e789309-441e-4f3f-af5f-69ba940902db"),
                            Emri = "Shkenca Politike",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("3f6e8e7a-58dc-4e60-9fad-fa4b2be412cd"),
                            Emri = "Juridik",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("dc1db886-3100-4ce9-99cc-493d88f603d5"),
                            Emri = "Media dhe Komunikim",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("b010567e-5b9c-461a-9d4b-1a9c36148f03"),
                            Emri = "Inxhineri e Energjisë",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("05251f11-0354-4d11-8dca-4422d284160b"),
                            Emri = "Politika Publike dhe Menaxhimi",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("7bb0e204-8a1a-4d40-b08f-81015d5c3c4e"),
                            Emri = "Infermieri",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("5d193df8-ef18-48d8-a722-7d94dbf636c6"),
                            Emri = "Farmaci",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("985167e8-cb59-4e1a-8bc8-268a3caf2911"),
                            Emri = "Stomatologji",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("273b38a2-4cd7-47e4-968b-d5d48d364edd"),
                            Emri = "Shkenca e Ushqimit dhe bioteknologji",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("7b6a59f2-d536-45c2-b981-ce54917084c0"),
                            Emri = "Dizajn i Integruar",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("571348c4-aadf-42b2-be6b-c2219e4dd845"),
                            Emri = "AgriKulturë dhe Inxhineri e Ambientit",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("4debc353-f2cc-4d75-82c8-0e356999a77a"),
                            Emri = "Arti dhe Mediat Digjitale",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("9aa12dbb-746c-41de-88b5-19da7de10516"),
                            Emri = "Muzika Moderne, Prodhimi Digjital dhe Menaxhimi",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("7da76f05-491c-44b4-9377-7e99c3ffd97b"),
                            Emri = "Teknik i Anesteziologjisë",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("7300a7d2-a6a0-4ca4-96c6-940e7b0c865e"),
                            Emri = "Teknik i Radiologjisë",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("b47eb467-7e2c-476c-b50b-25751692b447"),
                            Emri = "Aktrim",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        },
                        new
                        {
                            Id = new Guid("1e962ebf-9721-4fab-b489-6f0a1de1f0e8"),
                            Emri = "Psikologji",
                            InstitucioniId = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48")
                        });
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Edukimi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataFillimit")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataMbarimit")
                        .HasColumnType("datetime2");

                    b.Property<string>("FushaStudimit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstitucioniId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Lokacioni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NiveliAkademikId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Pershkrimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("InstitucioniId");

                    b.HasIndex("NiveliAkademikId");

                    b.HasIndex("UserId");

                    b.ToTable("Edukimi");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Eksperienca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataFillimit")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataMbarimit")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InstitucioniId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LlojiLokacionit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LlojiPunesimit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lokacioni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pershkrimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("InstitucioniId");

                    b.HasIndex("UserId");

                    b.ToTable("Eksperienca");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Gjuhet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmriGjuhes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gjuhet");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f63ac235-418d-4b60-93cc-cedd249837be"),
                            EmriGjuhes = "Afrikaans"
                        },
                        new
                        {
                            Id = new Guid("e1a628e0-6a2c-49f4-8371-8b5e21e045b6"),
                            EmriGjuhes = "Albanian"
                        },
                        new
                        {
                            Id = new Guid("cd001b96-f3de-4857-909d-a8197018b404"),
                            EmriGjuhes = "Amharic"
                        },
                        new
                        {
                            Id = new Guid("731d2d0c-c77b-4d45-9e5d-b2fccbeebd63"),
                            EmriGjuhes = "Arabic"
                        },
                        new
                        {
                            Id = new Guid("0ac41a4e-01dd-40af-b3fe-b0113a59369c"),
                            EmriGjuhes = "Armenian"
                        },
                        new
                        {
                            Id = new Guid("3436d59f-7d2c-4faf-b871-40f85287b8e2"),
                            EmriGjuhes = "Azerbaijani"
                        },
                        new
                        {
                            Id = new Guid("8022cc56-f02f-4e0b-ae09-fea2726f8d97"),
                            EmriGjuhes = "Basque"
                        },
                        new
                        {
                            Id = new Guid("55ee730c-a579-48eb-aa07-c994e2637f91"),
                            EmriGjuhes = "Belarusian"
                        },
                        new
                        {
                            Id = new Guid("bb5eefbc-c9a6-461a-986d-aa717f33f834"),
                            EmriGjuhes = "Bengali"
                        },
                        new
                        {
                            Id = new Guid("0af1d222-e087-4ce2-9237-63e0ac045c3a"),
                            EmriGjuhes = "Bosnian"
                        },
                        new
                        {
                            Id = new Guid("55a6fd9a-beac-4c06-a697-9d58e662320a"),
                            EmriGjuhes = "Bulgarian"
                        },
                        new
                        {
                            Id = new Guid("eefca401-9791-4aa4-a834-823f94a4593c"),
                            EmriGjuhes = "Catalan"
                        },
                        new
                        {
                            Id = new Guid("cc8f4d07-9c10-4a7f-86cd-6f2a2413ad33"),
                            EmriGjuhes = "Chinese"
                        },
                        new
                        {
                            Id = new Guid("9629d1fb-bb54-42b0-872f-a41a69a37614"),
                            EmriGjuhes = "Croatian"
                        },
                        new
                        {
                            Id = new Guid("9b19c334-7047-419b-8440-6da592859922"),
                            EmriGjuhes = "Czech"
                        },
                        new
                        {
                            Id = new Guid("2cdc39a5-8f2e-452b-8d4d-14f99b2a6614"),
                            EmriGjuhes = "Danish"
                        },
                        new
                        {
                            Id = new Guid("06ba1732-25ea-43e4-aa9b-11f7ab0c4b21"),
                            EmriGjuhes = "Dutch"
                        },
                        new
                        {
                            Id = new Guid("4fb75533-88eb-4373-9e4e-72c870ff43b9"),
                            EmriGjuhes = "English"
                        },
                        new
                        {
                            Id = new Guid("331e6eca-c849-4a42-bae5-34986d6bbaa3"),
                            EmriGjuhes = "Estonian"
                        },
                        new
                        {
                            Id = new Guid("6f799343-b897-4c01-8c28-686fd89053b8"),
                            EmriGjuhes = "Finnish"
                        },
                        new
                        {
                            Id = new Guid("d181099b-74ff-4120-a78b-f3676ab03bd5"),
                            EmriGjuhes = "French"
                        },
                        new
                        {
                            Id = new Guid("72b4b137-8018-4fe5-b0bd-4f44cc26e604"),
                            EmriGjuhes = "Galician"
                        },
                        new
                        {
                            Id = new Guid("dfa4a645-147a-4d34-8c6e-b9adc38544b7"),
                            EmriGjuhes = "Georgian"
                        },
                        new
                        {
                            Id = new Guid("c6bb8c19-b90f-4554-a80f-c90a21f712b6"),
                            EmriGjuhes = "German"
                        },
                        new
                        {
                            Id = new Guid("c993bdc3-b1de-4103-96d4-e977346e7ed2"),
                            EmriGjuhes = "Greek"
                        },
                        new
                        {
                            Id = new Guid("dff2380e-b62e-4489-940d-155116ab9b91"),
                            EmriGjuhes = "Gujarati"
                        },
                        new
                        {
                            Id = new Guid("1fe293fd-bc1f-40f1-9c79-7af39c00e911"),
                            EmriGjuhes = "Haitian Creole"
                        },
                        new
                        {
                            Id = new Guid("606c241c-3e3e-4730-8cda-28cbbfbbc7f1"),
                            EmriGjuhes = "Hebrew"
                        },
                        new
                        {
                            Id = new Guid("4014b4d6-2656-486c-bda5-7364fdd930ae"),
                            EmriGjuhes = "Hindi"
                        },
                        new
                        {
                            Id = new Guid("c7156ce4-d4b3-4e0b-a4f1-816b02c9bfcc"),
                            EmriGjuhes = "Hungarian"
                        },
                        new
                        {
                            Id = new Guid("9aafe0a4-8229-4974-b44c-ecadf8263a84"),
                            EmriGjuhes = "Icelandic"
                        },
                        new
                        {
                            Id = new Guid("f4ddfa46-6a87-4376-815b-af6cab990d52"),
                            EmriGjuhes = "Indonesian"
                        },
                        new
                        {
                            Id = new Guid("ffd5dabb-63e1-4cb7-acb3-53f2b041cd17"),
                            EmriGjuhes = "Irish"
                        },
                        new
                        {
                            Id = new Guid("ba014c88-de3e-4349-aad4-8e24d5afc2c4"),
                            EmriGjuhes = "Italian"
                        },
                        new
                        {
                            Id = new Guid("74722c3b-f235-49bb-85ad-b257a68c8b17"),
                            EmriGjuhes = "Japanese"
                        },
                        new
                        {
                            Id = new Guid("8644f2b0-339c-45b4-be8b-3c9a10a06f0f"),
                            EmriGjuhes = "Javanese"
                        },
                        new
                        {
                            Id = new Guid("deb1c84f-15b5-4424-b23f-c0cf31e49633"),
                            EmriGjuhes = "Kannada"
                        },
                        new
                        {
                            Id = new Guid("ebd9f689-e11b-44dd-a885-7e3ad24cf336"),
                            EmriGjuhes = "Kazakh"
                        },
                        new
                        {
                            Id = new Guid("ecaee039-3d79-4b68-a2ff-5f999eeeac56"),
                            EmriGjuhes = "Khmer"
                        },
                        new
                        {
                            Id = new Guid("4bcc6295-978d-4bd2-8ff3-34f01d238b74"),
                            EmriGjuhes = "Korean"
                        },
                        new
                        {
                            Id = new Guid("58e004d7-fdbb-47ef-a493-5adedbe02271"),
                            EmriGjuhes = "Kurdish"
                        },
                        new
                        {
                            Id = new Guid("9a18522f-31df-4016-85ec-04d6b9415bcf"),
                            EmriGjuhes = "Kyrgyz"
                        },
                        new
                        {
                            Id = new Guid("b2aef1e5-cbb8-406b-977b-e479380e481f"),
                            EmriGjuhes = "Lao"
                        },
                        new
                        {
                            Id = new Guid("8da15382-61a1-4003-ab59-4946e28603ba"),
                            EmriGjuhes = "Latvian"
                        },
                        new
                        {
                            Id = new Guid("ea81c50e-7068-4d54-a65f-0c2914fefb00"),
                            EmriGjuhes = "Lithuanian"
                        },
                        new
                        {
                            Id = new Guid("60e8cca6-cdc6-488e-9df4-d195207056b1"),
                            EmriGjuhes = "Macedonian"
                        },
                        new
                        {
                            Id = new Guid("5fcc64b1-97af-4ef1-8ff6-024902ed73e6"),
                            EmriGjuhes = "Malay"
                        },
                        new
                        {
                            Id = new Guid("44c0df9d-77e9-46a8-95a1-e1e5abcff685"),
                            EmriGjuhes = "Malayalam"
                        },
                        new
                        {
                            Id = new Guid("17bacb90-b7cb-41ae-bb21-949e7d849231"),
                            EmriGjuhes = "Maltese"
                        },
                        new
                        {
                            Id = new Guid("b820c74b-5342-43e4-9d7c-da7546dc4800"),
                            EmriGjuhes = "Maori"
                        },
                        new
                        {
                            Id = new Guid("6c462ef0-00bc-4cff-a166-4282c7bb3f75"),
                            EmriGjuhes = "Marathi"
                        },
                        new
                        {
                            Id = new Guid("6cb4a59d-43a7-485c-a42a-2d53731e4a42"),
                            EmriGjuhes = "Mongolian"
                        },
                        new
                        {
                            Id = new Guid("e82c10e0-ec34-47ea-8e40-e9f44848daf9"),
                            EmriGjuhes = "Nepali"
                        },
                        new
                        {
                            Id = new Guid("aad60ef4-0b8d-4b99-8b4e-2d68467701a8"),
                            EmriGjuhes = "Norwegian"
                        },
                        new
                        {
                            Id = new Guid("70dd0051-da8c-4533-ab93-0d27beff5e7f"),
                            EmriGjuhes = "Pashto"
                        },
                        new
                        {
                            Id = new Guid("756b040a-501e-447d-a703-0dba28307ca1"),
                            EmriGjuhes = "Persian"
                        },
                        new
                        {
                            Id = new Guid("eb71526f-530e-4477-b808-7c05608d5734"),
                            EmriGjuhes = "Polish"
                        },
                        new
                        {
                            Id = new Guid("351ad052-aa07-4e8e-9a29-b1572bb37977"),
                            EmriGjuhes = "Portuguese"
                        },
                        new
                        {
                            Id = new Guid("d0ea4583-d485-4290-acf1-9e32db784d62"),
                            EmriGjuhes = "Punjabi"
                        },
                        new
                        {
                            Id = new Guid("b9314cdc-d869-451f-b3dc-9e9b678ff115"),
                            EmriGjuhes = "Romanian"
                        },
                        new
                        {
                            Id = new Guid("f43ca4fb-06ca-4068-89d3-0008754cffc9"),
                            EmriGjuhes = "Russian"
                        },
                        new
                        {
                            Id = new Guid("08b5fc95-2576-41fc-85e6-12a5263fc1ee"),
                            EmriGjuhes = "Samoan"
                        },
                        new
                        {
                            Id = new Guid("1eb9b4d9-19c3-4c85-a9e9-50a47147b4b7"),
                            EmriGjuhes = "Serbian"
                        },
                        new
                        {
                            Id = new Guid("9263b275-11a5-4e2c-9d1c-b76c6b7919b9"),
                            EmriGjuhes = "Slovak"
                        },
                        new
                        {
                            Id = new Guid("84bed73e-4f4a-4067-b822-2cefee3bbf45"),
                            EmriGjuhes = "Slovenian"
                        },
                        new
                        {
                            Id = new Guid("df9ffed4-6354-43da-adf6-8be3adcbf46d"),
                            EmriGjuhes = "Somali"
                        },
                        new
                        {
                            Id = new Guid("ac6bc702-67a2-4674-8a8c-600424fc9933"),
                            EmriGjuhes = "Spanish"
                        },
                        new
                        {
                            Id = new Guid("3f47cb97-d7cd-4f40-a59f-2fd2b7125767"),
                            EmriGjuhes = "Swahili"
                        },
                        new
                        {
                            Id = new Guid("b70c7665-1982-4f1e-b6ff-31710f90ad10"),
                            EmriGjuhes = "Swedish"
                        },
                        new
                        {
                            Id = new Guid("437132bc-1985-46a3-9c55-f24dcef3b3f0"),
                            EmriGjuhes = "Tamil"
                        },
                        new
                        {
                            Id = new Guid("82274f16-c47f-4f36-8c04-b403c5e3e55b"),
                            EmriGjuhes = "Telugu"
                        },
                        new
                        {
                            Id = new Guid("50e2df1f-ea8b-43dd-989f-fef6f5cda2c5"),
                            EmriGjuhes = "Thai"
                        },
                        new
                        {
                            Id = new Guid("e5500cac-cbcd-4b41-a3c3-8c7f629c9638"),
                            EmriGjuhes = "Turkish"
                        },
                        new
                        {
                            Id = new Guid("d3d5f4b6-c735-425a-83b4-777456991d90"),
                            EmriGjuhes = "Ukrainian"
                        },
                        new
                        {
                            Id = new Guid("1919d45e-280a-41e1-a330-c314ab487ec0"),
                            EmriGjuhes = "Urdu"
                        },
                        new
                        {
                            Id = new Guid("bded2a98-155d-42e5-afbd-ae8142962b11"),
                            EmriGjuhes = "Uzbek"
                        },
                        new
                        {
                            Id = new Guid("73ff14da-36df-4330-b668-f786f34db78b"),
                            EmriGjuhes = "Vietnamese"
                        },
                        new
                        {
                            Id = new Guid("f2f84fae-17b2-496a-bf91-977b44604f1e"),
                            EmriGjuhes = "Welsh"
                        },
                        new
                        {
                            Id = new Guid("5caa257a-19d7-449e-93a4-f584a1d4c7db"),
                            EmriGjuhes = "Xhosa"
                        },
                        new
                        {
                            Id = new Guid("ea267650-83cb-4817-985c-df11d25a5b61"),
                            EmriGjuhes = "Yiddish"
                        },
                        new
                        {
                            Id = new Guid("e02e91b9-12b6-4981-a94c-c0cb2a1cac42"),
                            EmriGjuhes = "Yoruba"
                        },
                        new
                        {
                            Id = new Guid("b37fae09-4578-45c8-9e05-5aca670193c6"),
                            EmriGjuhes = "Zulu"
                        });
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.HonorsAndAwards", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstitucioniId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("dataEleshimit")
                        .HasColumnType("datetime2");

                    b.Property<string>("issuer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pershkrimi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstitucioniId");

                    b.HasIndex("UserId");

                    b.ToTable("HonorsAndAwards");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Institucioni", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Institucioni");

                    b.HasData(
                        new
                        {
                            Id = new Guid("496cc2c1-cc09-4c64-a53d-9529c2486b48"),
                            Emri = "UBT"
                        },
                        new
                        {
                            Id = new Guid("94c1f26d-3feb-4b96-91e5-68d077a5b804"),
                            Emri = "UP"
                        });
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Licensat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CredentialId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CredentialUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataLeshimit")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataSkadimit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstitucioniId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("InstitucioniId");

                    b.HasIndex("UserId");

                    b.ToTable("Licensat");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.MbikqyresITemave", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DepartamentiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime2");

                    b.Property<string>("studenti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulliTemes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentiId");

                    b.HasIndex("UserId");

                    b.ToTable("MbikqyresITemave");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.NiveliAkademik", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("lvl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NiveliAkademik");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fe75fb45-6c06-4324-a2a2-092b6e4a493e"),
                            lvl = "B.Sc."
                        },
                        new
                        {
                            Id = new Guid("6f67cd1a-d096-4dc6-a011-f733be57f74c"),
                            lvl = "M.Sc."
                        },
                        new
                        {
                            Id = new Guid("f53512ec-7466-4a98-90bd-862ca65e5cfd"),
                            lvl = "Ph.D."
                        });
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.NiveliGjuhesor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Niveli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NiveliGjuhesor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e52fa674-6854-4539-aeb8-89e716698f21"),
                            Niveli = "A1"
                        },
                        new
                        {
                            Id = new Guid("c7c2b680-c679-4de2-83d0-28464165f115"),
                            Niveli = "A2"
                        },
                        new
                        {
                            Id = new Guid("4f965348-1db2-4212-88bf-1bc868338209"),
                            Niveli = "B1"
                        },
                        new
                        {
                            Id = new Guid("a5c0e948-be3d-4ebd-beba-8b0a9fc0285b"),
                            Niveli = "B2"
                        },
                        new
                        {
                            Id = new Guid("2ea9d919-b3ea-4d0e-9e76-311c6955c4e7"),
                            Niveli = "C1"
                        },
                        new
                        {
                            Id = new Guid("81ebd457-1e9a-480b-bde1-d62196c51d75"),
                            Niveli = "C2"
                        });
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Projekti", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstitucioniId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("collaborators")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emriProjektit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstitucioniId");

                    b.HasIndex("UserId");

                    b.ToTable("Projekti");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Publikimi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AutoriKryesor")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataPublikimi")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DepartamentiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LinkuPublikimit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LlojiPublikimit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentiId");

                    b.HasIndex("UserId");

                    b.ToTable("Publikimi");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.PunaVullnetare", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataFillimit")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataMbarimit")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InstitucioniId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Pershkrimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("InstitucioniId");

                    b.HasIndex("UserId");

                    b.ToTable("PunaVullnetare");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Specializimet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstitucioniId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("aftesiteEfituara")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dataEFillimit")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dataEMbarimit")
                        .HasColumnType("datetime2");

                    b.Property<string>("llojiIspecializimit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lokacionit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("nrKredive")
                        .HasColumnType("int");

                    b.Property<string>("pershkrimi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstitucioniId");

                    b.HasIndex("UserId");

                    b.ToTable("Specializimet");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("NiveliAkademikId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dataELindjes")
                        .HasColumnType("datetime2");

                    b.Property<string>("emri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gjinia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mbiemri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numriTelefonit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("NiveliAkademikId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.UserGjuhet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GjuhaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NiveliGjuhesorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GjuhaId");

                    b.HasIndex("NiveliGjuhesorId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGjuhet");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("RIIMS.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("RIIMS.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RIIMS.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("RIIMS.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Aftesite", b =>
                {
                    b.HasOne("RIIMS.Domain.Entities.Institucioni", "Institucioni")
                        .WithMany("Aftesia")
                        .HasForeignKey("InstitucioniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RIIMS.Domain.Entities.User", "User")
                        .WithMany("Aftesite")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institucioni");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Departamenti", b =>
                {
                    b.HasOne("RIIMS.Domain.Entities.Institucioni", "Institucioni")
                        .WithMany("Departamentet")
                        .HasForeignKey("InstitucioniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institucioni");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Edukimi", b =>
                {
                    b.HasOne("RIIMS.Domain.Entities.Institucioni", "Institucioni")
                        .WithMany("Edukimet")
                        .HasForeignKey("InstitucioniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RIIMS.Domain.Entities.NiveliAkademik", "NiveliAkademik")
                        .WithMany("Edukimet")
                        .HasForeignKey("NiveliAkademikId");

                    b.HasOne("RIIMS.Domain.Entities.User", "User")
                        .WithMany("Edukimet")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institucioni");

                    b.Navigation("NiveliAkademik");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Eksperienca", b =>
                {
                    b.HasOne("RIIMS.Domain.Entities.Institucioni", "Institucioni")
                        .WithMany("Eksperiencat")
                        .HasForeignKey("InstitucioniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RIIMS.Domain.Entities.User", "User")
                        .WithMany("Eksperiencat")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institucioni");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.HonorsAndAwards", b =>
                {
                    b.HasOne("RIIMS.Domain.Entities.Institucioni", "Institucioni")
                        .WithMany("HonorsAndAwards")
                        .HasForeignKey("InstitucioniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RIIMS.Domain.Entities.User", "User")
                        .WithMany("HonorsAndAwards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institucioni");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Licensat", b =>
                {
                    b.HasOne("RIIMS.Domain.Entities.Institucioni", "Institucioni")
                        .WithMany("Licensat")
                        .HasForeignKey("InstitucioniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RIIMS.Domain.Entities.User", "User")
                        .WithMany("Licensat")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institucioni");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.MbikqyresITemave", b =>
                {
                    b.HasOne("RIIMS.Domain.Entities.Departamenti", "Departamenti")
                        .WithMany()
                        .HasForeignKey("DepartamentiId");

                    b.HasOne("RIIMS.Domain.Entities.User", "User")
                        .WithMany("MbiKqyresitETemave")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamenti");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Projekti", b =>
                {
                    b.HasOne("RIIMS.Domain.Entities.Institucioni", "Institucioni")
                        .WithMany("Projektet")
                        .HasForeignKey("InstitucioniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RIIMS.Domain.Entities.User", "User")
                        .WithMany("Projektet")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institucioni");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Publikimi", b =>
                {
                    b.HasOne("RIIMS.Domain.Entities.Departamenti", "Departamenti")
                        .WithMany()
                        .HasForeignKey("DepartamentiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RIIMS.Domain.Entities.User", "User")
                        .WithMany("Publikimet")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamenti");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.PunaVullnetare", b =>
                {
                    b.HasOne("RIIMS.Domain.Entities.Institucioni", "Institucioni")
                        .WithMany("PunetVullnetare")
                        .HasForeignKey("InstitucioniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RIIMS.Domain.Entities.User", "User")
                        .WithMany("PunetVullnetare")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institucioni");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Specializimet", b =>
                {
                    b.HasOne("RIIMS.Domain.Entities.Institucioni", "Institucioni")
                        .WithMany("Specializimet")
                        .HasForeignKey("InstitucioniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RIIMS.Domain.Entities.User", "User")
                        .WithMany("Specializimet")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institucioni");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.User", b =>
                {
                    b.HasOne("RIIMS.Domain.Entities.Image", "Image")
                        .WithMany("Users")
                        .HasForeignKey("ImageId");

                    b.HasOne("RIIMS.Domain.Entities.NiveliAkademik", "NiveliAkademik")
                        .WithMany("Users")
                        .HasForeignKey("NiveliAkademikId");

                    b.Navigation("Image");

                    b.Navigation("NiveliAkademik");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.UserGjuhet", b =>
                {
                    b.HasOne("RIIMS.Domain.Entities.Gjuhet", "Gjuha")
                        .WithMany("UserGjuhet")
                        .HasForeignKey("GjuhaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RIIMS.Domain.Entities.NiveliGjuhesor", "NiveliGjuhesor")
                        .WithMany("UserGjuhet")
                        .HasForeignKey("NiveliGjuhesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RIIMS.Domain.Entities.User", "User")
                        .WithMany("Gjuhet")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gjuha");

                    b.Navigation("NiveliGjuhesor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Gjuhet", b =>
                {
                    b.Navigation("UserGjuhet");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Image", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.Institucioni", b =>
                {
                    b.Navigation("Aftesia");

                    b.Navigation("Departamentet");

                    b.Navigation("Edukimet");

                    b.Navigation("Eksperiencat");

                    b.Navigation("HonorsAndAwards");

                    b.Navigation("Licensat");

                    b.Navigation("Projektet");

                    b.Navigation("PunetVullnetare");

                    b.Navigation("Specializimet");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.NiveliAkademik", b =>
                {
                    b.Navigation("Edukimet");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.NiveliGjuhesor", b =>
                {
                    b.Navigation("UserGjuhet");
                });

            modelBuilder.Entity("RIIMS.Domain.Entities.User", b =>
                {
                    b.Navigation("Aftesite");

                    b.Navigation("Edukimet");

                    b.Navigation("Eksperiencat");

                    b.Navigation("Gjuhet");

                    b.Navigation("HonorsAndAwards");

                    b.Navigation("Licensat");

                    b.Navigation("MbiKqyresitETemave");

                    b.Navigation("Projektet");

                    b.Navigation("Publikimet");

                    b.Navigation("PunetVullnetare");

                    b.Navigation("Specializimet");
                });
#pragma warning restore 612, 618
        }
    }
}
